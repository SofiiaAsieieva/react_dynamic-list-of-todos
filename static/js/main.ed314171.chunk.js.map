{"version":3,"sources":["components/TodoList/TodoList.jsx","api/api.js","components/Loader/Loader.jsx","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","state","input","select","inputChangeHandel","event","target","name","value","setState","filterTodos","filteredTodosSearch","props","todos","filter","todo","title","includes","completed","this","selectedUser","selectedUserId","className","type","onChange","map","key","id","classNames","readOnly","userId","onClick","React","Component","BASE_URL","request","url","fetch","then","response","json","data","catch","error","console","log","Loader","src","alt","CurrentUser","user","getUser","prevProps","a","userA","email","phone","clearUser","App","length","ReactDOM","render","document","getElementById"],"mappings":"6YAKaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,GACPC,OAAQ,OAHZ,EAMEC,kBAAoB,SAACC,GAAW,IAAD,EACLA,EAAMC,OAAtBC,EADqB,EACrBA,KAAMC,EADe,EACfA,MAEd,EAAKC,SAAL,eAAiBF,EAAOC,KAT5B,EAYEE,YAAc,WAAO,IAAD,EACQ,EAAKT,MAAvBC,EADU,EACVA,MAAOC,EADG,EACHA,OACTQ,EAAsB,EAAKC,MAAMC,MACpCC,QAAO,SAAAC,GAAI,QAAKA,EAAKC,OAAQD,EAAKC,MAAMC,SAASf,MAEpD,OAAQC,GACN,IAAK,SACH,OAAOQ,EAAoBG,QAAO,SAAAC,GAAI,OAAKA,EAAKG,aAElD,IAAK,YACH,OAAOP,EAAoBG,QAAO,SAAAC,GAAI,OAAIA,EAAKG,aAEjD,QACA,IAAK,MACH,OAAOP,IA1Bf,4CA8BE,WAAU,IAAD,SACmBQ,KAAKlB,MAAvBC,EADD,EACCA,MAAOC,EADR,EACQA,OADR,EAEyCgB,KAAKP,MAA7CC,EAFD,EAECA,MAAOO,EAFR,EAEQA,aAAcC,EAFtB,EAEsBA,eAE7B,OACE,yBAAKC,UAAU,YACb,sCAEA,2BACEf,KAAK,QACLgB,KAAK,OACLf,MAAON,EACPsB,SAAU,SAAAnB,GAAK,OAAI,EAAKD,kBAAkBC,MAG5C,4BACEE,KAAK,SACLC,MAAOL,EACPqB,SAAU,SAAAnB,GAAK,OAAI,EAAKD,kBAAkBC,KAE1C,4BAAQG,MAAM,OAAd,OACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,aAAd,cAGF,yBAAKc,UAAU,4BACb,wBAAIA,UAAU,kBACXH,KAAKT,YAAYG,GAAOY,KAAI,SAAAV,GAAI,OAC/B,wBACEW,IAAKX,EAAKY,GACVL,UAAWM,IACT,iBACA,CAAE,6BAA8Bb,EAAKG,WACrC,CAAE,0BAA2BH,EAAKG,aAGpC,+BACE,2BAAOK,KAAK,WAAWM,UAAQ,IAC/B,2BAAId,EAAKC,QAEX,4BACEM,UAAWM,IACT,SACA,wBACA,CAAE,kCACEb,EAAKe,SAAWT,IAEtBE,KAAK,SACLQ,QAAS,WACHhB,EAAKe,SAAWT,EAClBD,EAAa,GAEbA,EAAaL,EAAKe,UAZxB,gBAgBYf,EAAKe,oBAtFjC,GAA8BE,IAAMC,W,wBCL9BC,G,MAAW,kCAEjB,SAASC,EAAQC,GACf,OAAOC,MAAMD,GACVE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAQ,OAAIA,EAASE,QAE1BC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,M,UCJnBG,EAAS,kBACpB,yBAEExB,UAAU,SACVyB,IAAI,kEACJC,IAAI,aCFKC,EAAb,4MACEhD,MAAQ,CACNiD,KAAM,MAFV,uDAKE,WACE/B,KAAKgC,YANT,gCASE,SAAmBC,GAAY,IACrB/B,EAAmBF,KAAKP,MAAxBS,eAEJ+B,EAAU/B,iBAAmBA,GAC/BF,KAAKgC,YAbX,4DAiBE,8BAAAE,EAAA,6DACUhC,EAAmBF,KAAKP,MAAxBS,eADV,SFTwBS,EEYQT,EFXzBc,EAAQ,GAAD,OAAID,EAAJ,kBAAsBJ,IEQpC,OAGQwB,EAHR,OAKEnC,KAAKV,SAAS,CAAEyC,KAAMI,IALxB,iCFTK,IAAmBxB,IESxB,YAjBF,0EAyBE,WAAU,IACAoB,EAAS/B,KAAKlB,MAAdiD,KAER,OAAa,OAATA,EAEA,kBAAC,EAAD,MAKF,yBAAK5B,UAAU,eACb,6BACE,wBAAIA,UAAU,sBACZ,8BACG4B,EAAKvB,KAIV,wBAAIL,UAAU,qBAAqB4B,EAAK3C,MACxC,uBAAGe,UAAU,sBAAsB4B,EAAKK,OACxC,uBAAGjC,UAAU,sBAAsB4B,EAAKM,OAExC,4BACElC,UAAU,SACVC,KAAK,SACLQ,QAASZ,KAAKP,MAAM6C,WAHtB,eA/CV,GAAiCzB,IAAMC,WCoDxByB,E,4MAjDbzD,MAAQ,CACNY,MAAO,GACPQ,eAAgB,G,EAQlBD,aAAe,SAACU,GACd,EAAKrB,SAAS,CAAEY,eAAgBS,K,EAGlC2B,UAAY,WACV,EAAKhD,SAAS,CAAEY,eAAgB,K,uDAVlC,WAAqB,IAAD,OHHbc,EAAQ,GAAD,OAAID,EAAJ,WGKTI,MAAK,SAAAC,GAAQ,OAAI,EAAK9B,SAAS,CAAEI,MAAO0B,S,oBAW7C,WAAU,IAAD,EAC2BpB,KAAKlB,MAA/BY,EADD,EACCA,MAAOQ,EADR,EACQA,eAEf,OACE,yBAAKC,UAAU,OACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CACET,MAAOA,EACPO,aAAcD,KAAKC,aACnBC,eAAgBA,IAEA,IAAjBR,EAAM8C,QACL,kBAAC,EAAD,OAIJ,yBAAKrC,UAAU,gBACb,yBAAKA,UAAU,0BACO,IAAnBD,EACC,kBAAC,EAAD,CACEoC,UAAWtC,KAAKsC,UAChBpC,eAAgBA,IAEhB,0B,GA1CEW,IAAMC,WCJxB2B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.ed314171.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\nimport classNames from 'classnames';\n\nexport class TodoList extends React.Component {\n  state = {\n    input: '',\n    select: 'All',\n  };\n\n  inputChangeHandel = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n  }\n\n  filterTodos = () => {\n    const { input, select } = this.state;\n    const filteredTodosSearch = this.props.todos\n      .filter(todo => (todo.title ? todo.title.includes(input) : false));\n\n    switch (select) {\n      case 'Active':\n        return filteredTodosSearch.filter(todo => !todo.completed);\n\n      case 'Completed':\n        return filteredTodosSearch.filter(todo => todo.completed);\n\n      default:\n      case 'All':\n        return filteredTodosSearch;\n    }\n  }\n\n  render() {\n    const { input, select } = this.state;\n    const { todos, selectedUser, selectedUserId } = this.props;\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <input\n          name=\"input\"\n          type=\"text\"\n          value={input}\n          onChange={event => this.inputChangeHandel(event)}\n        />\n\n        <select\n          name=\"select\"\n          value={select}\n          onChange={event => this.inputChangeHandel(event)}\n        >\n          <option value=\"All\">All</option>\n          <option value=\"Active\">Active</option>\n          <option value=\"Completed\">Completed</option>\n        </select>\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {this.filterTodos(todos).map(todo => (\n              <li\n                key={todo.id}\n                className={classNames(\n                  'TodoList__item',\n                  { 'TodoList__item--unchecked': !todo.completed },\n                  { 'TodoList__item--checked': todo.completed },\n                )}\n              >\n                <label>\n                  <input type=\"checkbox\" readOnly />\n                  <p>{todo.title}</p>\n                </label>\n                <button\n                  className={classNames(\n                    'button',\n                    'TodoList__user-button',\n                    { 'TodoList__user-button--selected':\n                        todo.userId === selectedUserId },\n                  )}\n                  type=\"button\"\n                  onClick={() => {\n                    if (todo.userId === selectedUserId) {\n                      selectedUser(0);\n                    } else {\n                      selectedUser(todo.userId);\n                    }\n                  }}\n                >\n                  {`User #${todo.userId}`}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    id: PropTypes.number,\n    userId: PropTypes.number,\n    completed: PropTypes.bool,\n  })).isRequired,\n  selectedUser: PropTypes.func.isRequired,\n  selectedUserId: PropTypes.number.isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nfunction request(url) {\n  return fetch(url)\n    .then(response => response.json())\n    .then(response => response.data)\n    // eslint-disable-next-line no-console\n    .catch(error => console.log(error));\n}\n\nexport function loadTodos() {\n  return request(`${BASE_URL}/todos`);\n}\n\nexport function loadUsers(userId) {\n  return request(`${BASE_URL}/users/${userId}`);\n}\n","import React from 'react';\nimport './loader.scss';\n\nexport const Loader = () => (\n  <img\n    /* eslint-disable-next-line max-len */\n    className=\"loader\"\n    src=\"https://www.magnumblog.space/images/stories/home_page_skype.png\"\n    alt=\"loading\"\n  />\n);\n","import React from 'react';\nimport './CurrentUser.scss';\nimport PropTypes from 'prop-types';\nimport { loadUsers } from '../../api/api';\nimport { Loader } from '../Loader/Loader';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: null,\n  }\n\n  componentDidMount() {\n    this.getUser();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { selectedUserId } = this.props;\n\n    if (prevProps.selectedUserId !== selectedUserId) {\n      this.getUser();\n    }\n  }\n\n  async getUser() {\n    const { selectedUserId } = this.props;\n\n    const userA = await loadUsers(selectedUserId);\n\n    this.setState({ user: userA });\n  }\n\n  render() {\n    const { user } = this.state;\n\n    if (user === null) {\n      return (\n        <Loader />\n      );\n    }\n\n    return (\n      <div className=\"CurrentUser\">\n        <div>\n          <h2 className=\"CurrentUser__title\">\n            <span>\n              {user.id}\n            </span>\n          </h2>\n\n          <h3 className=\"CurrentUser__name\">{user.name}</h3>\n          <p className=\"CurrentUser__email\">{user.email}</p>\n          <p className=\"CurrentUser__phone\">{user.phone}</p>\n\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={this.props.clearUser}\n          >\n            Clear\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  clearUser: PropTypes.func.isRequired,\n  selectedUserId: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { loadTodos } from './api/api';\nimport { Loader } from './components/Loader/Loader';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    loadTodos()\n      .then(response => this.setState({ todos: response }));\n  }\n\n  selectedUser = (userId) => {\n    this.setState({ selectedUserId: userId });\n  }\n\n  clearUser = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            selectedUser={this.selectedUser}\n            selectedUserId={selectedUserId}\n          />\n          {todos.length === 0 && (\n            <Loader />\n          )}\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId !== 0 ? (\n              <CurrentUser\n                clearUser={this.clearUser}\n                selectedUserId={selectedUserId}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}