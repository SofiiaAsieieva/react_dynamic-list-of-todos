{"version":3,"sources":["components/Form/Form.jsx","components/TodoList/TodoList.jsx","api/api.js","components/Loader/Loader.jsx","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["Form","input","select","handleChange","name","type","value","onChange","event","TodoList","state","handleClick","todoUserId","selectedUserId","selectUser","target","setState","filterTodos","filteredTodosSearch","props","todos","filter","todo","title","includes","completed","this","className","map","key","id","classNames","readOnly","userId","onClick","React","Component","BASE_URL","request","url","fetch","then","response","json","data","catch","error","console","log","Loader","src","alt","CurrentUser","selectedUser","getUser","prevProps","a","email","phone","clearUser","App","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2f4cd403.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport function Form({ input, select, handleChange }) {\n  return (\n    <>\n      <input\n        name=\"input\"\n        type=\"text\"\n        value={input}\n        onChange={event => handleChange(event)}\n      />\n\n      <select\n        name=\"select\"\n        value={select}\n        onChange={event => handleChange(event)}\n      >\n        <option value=\"All\">All</option>\n        <option value=\"Active\">Active</option>\n        <option value=\"Completed\">Completed</option>\n      </select>\n    </>\n  );\n}\n\nForm.propTypes = {\n  input: PropTypes.string.isRequired,\n  select: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\nimport classNames from 'classnames';\nimport { Form } from '../Form/Form';\n\nexport class TodoList extends React.Component {\n  state = {\n    input: '',\n    select: 'All',\n  };\n\n  handleClick = (todoUserId, selectedUserId, selectUser) => {\n    if (todoUserId === selectedUserId) {\n      selectUser(0);\n    } else {\n      selectUser(todoUserId);\n    }\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n  }\n\n  filterTodos = () => {\n    const { input, select } = this.state;\n    const filteredTodosSearch = this.props.todos\n      .filter(todo => (todo.title ? todo.title.includes(input) : false));\n\n    switch (select) {\n      case 'Active':\n        return filteredTodosSearch.filter(todo => !todo.completed);\n\n      case 'Completed':\n        return filteredTodosSearch.filter(todo => todo.completed);\n\n      default:\n      case 'All':\n        return filteredTodosSearch;\n    }\n  }\n\n  render() {\n    const { input, select } = this.state;\n    const { todos, selectUser, selectedUserId } = this.props;\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <Form\n          input={input}\n          select={select}\n          handleChange={this.handleChange}\n        />\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {this.filterTodos(todos).map(todo => (\n              <li\n                key={todo.id}\n                className={classNames(\n                  'TodoList__item',\n                  { 'TodoList__item--unchecked': !todo.completed },\n                  { 'TodoList__item--checked': todo.completed },\n                )}\n              >\n                <label>\n                  <input type=\"checkbox\" readOnly />\n                  <p>{todo.title}</p>\n                </label>\n                <button\n                  className={classNames(\n                    'button',\n                    'TodoList__user-button',\n                    { 'TodoList__user-button--selected':\n                        todo.userId === selectedUserId },\n                  )}\n                  type=\"button\"\n                  onClick={() => {\n                    this.handleClick(todo.userId, selectedUserId, selectUser);\n                  }}\n                >\n                  {`User #${todo.userId}`}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    id: PropTypes.number,\n    userId: PropTypes.number,\n    completed: PropTypes.bool,\n  })).isRequired,\n  selectUser: PropTypes.func.isRequired,\n  selectedUserId: PropTypes.number.isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nfunction request(url) {\n  return fetch(url)\n    .then(response => response.json())\n    .then(response => response.data)\n    // eslint-disable-next-line no-console\n    .catch(error => console.log(error));\n}\n\nexport function loadTodos() {\n  return request(`${BASE_URL}/todos`);\n}\n\nexport function loadUsers(userId) {\n  return request(`${BASE_URL}/users/${userId}`);\n}\n","import React from 'react';\nimport './loader.scss';\n\nexport const Loader = () => (\n  <img\n    /* eslint-disable-next-line max-len */\n    className=\"loader\"\n    src=\"https://www.magnumblog.space/images/stories/home_page_skype.png\"\n    alt=\"loading\"\n  />\n);\n","import React from 'react';\nimport './CurrentUser.scss';\nimport PropTypes from 'prop-types';\nimport { loadUsers } from '../../api/api';\nimport { Loader } from '../Loader/Loader';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    selectedUser: null,\n  }\n\n  componentDidMount() {\n    this.getUser();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { selectedUserId } = this.props;\n\n    if (prevProps.selectedUserId !== selectedUserId) {\n      this.getUser();\n    }\n  }\n\n  async getUser() {\n    const { selectedUserId } = this.props;\n\n    const selectedUser = await loadUsers(selectedUserId);\n\n    this.setState({ selectedUser });\n  }\n\n  render() {\n    const { selectedUser } = this.state;\n\n    if (selectedUser === null) {\n      return (\n        <Loader />\n      );\n    }\n\n    return (\n      <div className=\"CurrentUser\">\n        <div>\n          <h2 className=\"CurrentUser__title\">\n            <span>\n              {selectedUser.id}\n            </span>\n          </h2>\n\n          <h3 className=\"CurrentUser__name\">{selectedUser.name}</h3>\n          <p className=\"CurrentUser__email\">{selectedUser.email}</p>\n          <p className=\"CurrentUser__phone\">{selectedUser.phone}</p>\n\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={this.props.clearUser}\n          >\n            Clear\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  clearUser: PropTypes.func.isRequired,\n  selectedUserId: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { loadTodos } from './api/api';\nimport { Loader } from './components/Loader/Loader';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    loadTodos()\n      .then(todos => this.setState({ todos }));\n  }\n\n  selectUser = (userId) => {\n    this.setState({ selectedUserId: userId });\n  }\n\n  clearUser = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            selectUser={this.selectUser}\n            selectedUserId={selectedUserId}\n          />\n          {todos.length === 0 && (\n            <Loader />\n          )}\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId !== 0 ? (\n              <CurrentUser\n                clearUser={this.clearUser}\n                selectedUserId={selectedUserId}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}