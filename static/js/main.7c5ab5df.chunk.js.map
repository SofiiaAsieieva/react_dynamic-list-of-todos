{"version":3,"sources":["components/Form/Form.jsx","components/TodoList/TodoList.jsx","api/api.js","components/Loader/Loader.jsx","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["Form","todos","addFilterTodos","useState","input","setInput","select","setSelect","handleChange","event","target","name","value","useEffect","filteredTodosSearch","filter","todo","title","includes","completed","filteredTodos","type","onChange","TodoList","state","props","handleClick","todoUserId","selectedUserId","selectUser","setState","this","className","map","key","id","classNames","readOnly","userId","onClick","React","Component","BASE_URL","request","url","fetch","then","response","json","data","catch","error","console","log","Loader","src","alt","CurrentUser","selectedUser","getUser","prevProps","a","email","phone","clearUser","App","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7c5ab5df.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Form = ({ todos, addFilterTodos }) => {\n  const [input, setInput] = useState('');\n  const [select, setSelect] = useState('All');\n\n  const filteredTodos = () => {\n    const filteredTodosSearch = todos\n      .filter(todo => (todo.title ? todo.title.includes(input) : false));\n\n    switch (select) {\n      case 'Active':\n        return addFilterTodos(filteredTodosSearch\n          .filter(todo => !todo.completed));\n\n      case 'Completed':\n        return addFilterTodos(filteredTodosSearch\n          .filter(todo => todo.completed));\n\n      default:\n      case 'All':\n        return addFilterTodos(filteredTodosSearch);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'input') {\n      setInput(value);\n    }\n\n    if (name === 'select') {\n      setSelect(value);\n    }\n  };\n\n  useEffect(() => {\n    filteredTodos();\n  }, [input, select]);\n\n  return (\n    <>\n      <input\n        name=\"input\"\n        type=\"text\"\n        value={input}\n        onChange={event => handleChange(event)}\n      />\n\n      <select\n        name=\"select\"\n        value={select}\n        onChange={event => handleChange(event)}\n      >\n        <option value=\"All\">All</option>\n        <option value=\"Active\">Active</option>\n        <option value=\"Completed\">Completed</option>\n      </select>\n    </>\n  );\n};\n\nForm.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n  })).isRequired,\n  addFilterTodos: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\nimport classNames from 'classnames';\nimport { Form } from '../Form/Form';\n\nexport class TodoList extends React.Component {\n  state = {\n    filteredTodos: this.props.todos,\n  };\n\n  handleClick = (todoUserId, selectedUserId, selectUser) => {\n    if (todoUserId === selectedUserId) {\n      selectUser(0);\n    } else {\n      selectUser(todoUserId);\n    }\n  }\n\n  addFilterTodos = (filteredTodos) => {\n    this.setState({ filteredTodos });\n  }\n\n  render() {\n    const { filteredTodos } = this.state;\n    const { todos, selectUser, selectedUserId } = this.props;\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <Form\n          todos={todos}\n          addFilterTodos={this.addFilterTodos}\n        />\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {filteredTodos.map(todo => (\n              <li\n                key={todo.id}\n                className={classNames(\n                  'TodoList__item',\n                  { 'TodoList__item--unchecked': !todo.completed },\n                  { 'TodoList__item--checked': todo.completed },\n                )}\n              >\n                <label>\n                  <input type=\"checkbox\" readOnly />\n                  <p>{todo.title}</p>\n                </label>\n                <button\n                  className={classNames(\n                    'button',\n                    'TodoList__user-button',\n                    { 'TodoList__user-button--selected':\n                        todo.userId === selectedUserId },\n                  )}\n                  type=\"button\"\n                  onClick={() => {\n                    this.handleClick(todo.userId, selectedUserId, selectUser);\n                  }}\n                >\n                  {`User #${todo.userId}`}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    id: PropTypes.number,\n    userId: PropTypes.number,\n    completed: PropTypes.bool,\n  })).isRequired,\n  selectUser: PropTypes.func.isRequired,\n  selectedUserId: PropTypes.number.isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nfunction request(url) {\n  return fetch(url)\n    .then(response => response.json())\n    .then(response => response.data)\n    // eslint-disable-next-line no-console\n    .catch(error => console.log(error));\n}\n\nexport function loadTodos() {\n  return request(`${BASE_URL}/todos`);\n}\n\nexport function loadUsers(userId) {\n  return request(`${BASE_URL}/users/${userId}`);\n}\n","import React from 'react';\nimport './loader.scss';\n\nexport const Loader = () => (\n  <img\n    /* eslint-disable-next-line max-len */\n    className=\"loader\"\n    src=\"https://www.magnumblog.space/images/stories/home_page_skype.png\"\n    alt=\"loading\"\n  />\n);\n","import React from 'react';\nimport './CurrentUser.scss';\nimport PropTypes from 'prop-types';\nimport { loadUsers } from '../../api/api';\nimport { Loader } from '../Loader/Loader';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    selectedUser: null,\n  }\n\n  componentDidMount() {\n    this.getUser();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { selectedUserId } = this.props;\n\n    if (prevProps.selectedUserId !== selectedUserId) {\n      this.getUser();\n    }\n  }\n\n  async getUser() {\n    const { selectedUserId } = this.props;\n\n    const selectedUser = await loadUsers(selectedUserId);\n\n    this.setState({ selectedUser });\n  }\n\n  render() {\n    const { selectedUser } = this.state;\n\n    if (selectedUser === null) {\n      return (\n        <Loader />\n      );\n    }\n\n    return (\n      <div className=\"CurrentUser\">\n        <div>\n          <h2 className=\"CurrentUser__title\">\n            <span>\n              {selectedUser.id}\n            </span>\n          </h2>\n\n          <h3 className=\"CurrentUser__name\">{selectedUser.name}</h3>\n          <p className=\"CurrentUser__email\">{selectedUser.email}</p>\n          <p className=\"CurrentUser__phone\">{selectedUser.phone}</p>\n\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={this.props.clearUser}\n          >\n            Clear\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  clearUser: PropTypes.func.isRequired,\n  selectedUserId: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { loadTodos } from './api/api';\nimport { Loader } from './components/Loader/Loader';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    loadTodos()\n      .then(todos => this.setState({ todos }));\n  }\n\n  selectUser = (userId) => {\n    this.setState({ selectedUserId: userId });\n  }\n\n  clearUser = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          {!!todos.length && (\n            <TodoList\n              todos={ todos }\n              selectUser={ this.selectUser }\n              selectedUserId={ selectedUserId }\n          />) }\n          {todos.length === 0 && (\n            <Loader />\n          )}\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId !== 0 ? (\n              <CurrentUser\n                clearUser={this.clearUser}\n                selectedUserId={selectedUserId}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}